# Minimal Dockerfile for Open WebUI (no ML dependencies)
# Optimized for Bedrock usage with minimal image size

FROM public.ecr.aws/docker/library/python:3.11-slim-bookworm

# Set environment variables for minimal installation
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PORT=8080 \
    ENV=prod \
    SCARF_NO_ANALYTICS=true \
    DO_NOT_TRACK=true \
    ANONYMIZED_TELEMETRY=false \
    DOCKER=true

# ECS-specific configurations
ENV OPENAI_API_BASE_URL="" \
    OPENAI_API_KEY="" \
    WEBUI_SECRET_KEY="" \
    WEBUI_AUTH=true \
    ENABLE_SIGNUP=true \
    ENABLE_OPENAI_API=true

# Disable all ML models and heavy dependencies for minimal installation
ENV RAG_EMBEDDING_MODEL="" \
    RAG_RERANKING_MODEL="" \
    WHISPER_MODEL="" \
    SENTENCE_TRANSFORMERS_HOME="/tmp" \
    HF_HOME="/tmp" \
    TIKTOKEN_CACHE_DIR="/tmp" \
    TRANSFORMERS_OFFLINE=1 \
    HF_DATASETS_OFFLINE=1 \
    TOKENIZERS_PARALLELISM=false

# Install minimal system dependencies only
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /tmp/* /var/tmp/*

# Set working directory
WORKDIR /app

# Install Open WebUI with minimal dependencies (no ML extras)
RUN pip install --no-cache-dir --no-deps open-webui && \
    pip install --no-cache-dir \
    fastapi \
    uvicorn \
    pydantic \
    python-multipart \
    python-jose \
    passlib \
    bcrypt \
    python-socketio \
    aiofiles \
    requests \
    && pip cache purge

# Create data directory
RUN mkdir -p /app/data

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl --silent --fail http://localhost:8080/health || exit 1

# Run the application
CMD ["open-webui", "serve", "--host", "0.0.0.0", "--port", "8080"] 